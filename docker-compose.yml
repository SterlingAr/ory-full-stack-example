version: '3'

networks:
  ory_stack:
    driver: bridge
  stack:
    external:
      name: daassuitedockerdevelopment_stack

volumes:
  hydra_db:
    driver: local
  oathkeeper_db:
    driver: local
  keto_db:
    driver: local

services:
  hydra_postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: hydra-db
    environment:
      - POSTGRES_USER=${HYDRA_POSTGRES_USER}
      - POSTGRES_PASSWORD=${HYDRA_POSTGRES_PASSWORD}
      - POSTGRES_DB=${HYDRA_POSTGRES_DB}
    volumes:
    - ${DATA_PATH_HOST}/hydra_db:/var/lib/postgresql/data
    networks:
      - ory_stack

  oathkeeper_postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: oathkeeper-db
    environment:
      - POSTGRES_USER=${OATHKEEPER_POSTGRES_USER}
      - POSTGRES_PASSWORD=${OATHKEEPER_POSTGRES_PASSWORD}
      - POSTGRES_DB=${OATHKEEPER_POSTGRES_DB}
    volumes:
      - ${DATA_PATH_HOST}/oathkeeper_db:/var/lib/postgresql/data
    networks:
      - ory_stack

  keto_postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: keto-db
    environment:
      - POSTGRES_USER=${KETO_POSTGRES_USER}
      - POSTGRES_PASSWORD=${KETO_POSTGRES_PASSWORD}
      - POSTGRES_DB=${KETO_POSTGRES_DB}
    volumes:
      - ${DATA_PATH_HOST}/keto_db:/var/lib/postgresql/data
    networks:
      - ory_stack

  hydra_migrate:
    image: oryd/hydra:${HYDRA_VERSION}
    container_name: hydra-migrate-v1
    depends_on:
      - hydra_postgres
    networks:
    - ory_stack
    command: "migrate sql $HYDRA_DATABASE_URL"
    tty: false

  oathkeeper_migrate:
    image: oryd/oathkeeper:${OATHKEEPER_VERSION}
    container_name: oathkeeper-migrate
    depends_on:
      - oathkeeper_postgres
    networks:
      - ory_stack
    command: "migrate sql $OATHKEEPER_DATABASE_URL"
    tty: false

  keto_migrate:
    image: oryd/keto:${KETO_VERSION}
    container_name: keto-migrate
    depends_on:
      - keto_postgres
    networks:
      - ory_stack
    command: "migrate sql $KETO_DATABASE_URL"
    tty: false

  oathkeeper_api:
    image: oryd/oathkeeper:${OATHKEEPER_VERSION}
    container_name: oathkeeper-api
    depends_on:
      - oathkeeper_migrate
      - keto
    environment:
      - DATABASE_URL=${OATHKEEPER_DATABASE_URL}
      - AUTHORIZER_KETO_URL=${AUTHORIZER_KETO_URL}
      - PORT=4456
      - AUTHENTICATOR_OAUTH2_INTROSPECTION_URL=${AUTHENTICATOR_OAUTH2_INTROSPECTION_URL}
      - CREDENTIALS_ISSUER_ID_TOKEN_HYDRA_ADMIN_URL=${CREDENTIALS_ISSUER_ID_TOKEN_HYDRA_ADMIN_URL}
      - CREDENTIALS_ISSUER_ID_TOKEN_ALGORITHM=${CREDENTIALS_ISSUER_ID_TOKEN_ALGORITHM}
#      - CREDENTIALS_ISSUER_ID_TOKEN_HS256_SECRET=${CREDENTIALS_ISSUER_ID_TOKEN_HS256_SECRET}
    networks:
      - ory_stack
    entrypoint: oathkeeper
    ports:
      - "4456:4456"
    command: "serve api"

  oathkeeper_proxy:
    image: oryd/oathkeeper:${OATHKEEPER_VERSION}
    container_name: oathkeeper-proxy
    depends_on:
      - hydra
      - oathkeeper_api
    environment:
      - OATHKEEPER_API_URL=http://oathkeeper-api:4456
      - AUTHORIZER_KETO_URL=${AUTHORIZER_KETO_URL}
      - PORT=4455
      - AUTHENTICATOR_OAUTH2_INTROSPECTION_URL=${AUTHENTICATOR_OAUTH2_INTROSPECTION_URL}
      - CREDENTIALS_ISSUER_ID_TOKEN_HYDRA_ADMIN_URL=${CREDENTIALS_ISSUER_ID_TOKEN_HYDRA_ADMIN_URL}
      - CREDENTIALS_ISSUER_ID_TOKEN_ALGORITHM=${CREDENTIALS_ISSUER_ID_TOKEN_ALGORITHM}
#      - CREDENTIALS_ISSUER_ID_TOKEN_HS256_SECRET=${CREDENTIALS_ISSUER_ID_TOKEN_HS256_SECRET}
    networks:
      - ory_stack
      - stack
    ports:
      - "4455:4455"
    entrypoint: oathkeeper
    command: "serve proxy"

  keto:
    image: oryd/keto:${KETO_VERSION}
    container_name: keto
    depends_on:
      - keto_migrate
    environment:
      - DATABASE_URL=${KETO_DATABASE_URL}
    networks:
      - ory_stack
    ports:
      - "4466:4466"
    entrypoint: keto
    command: "serve"

  hydra:
    image: oryd/hydra:${HYDRA_VERSION}
    container_name: hydra
    depends_on:
    - hydra_migrate
    environment:
      - DATABASE_URL=${HYDRA_DATABASE_URL}
      - SYSTEM_SECRET=${SYSTEM_SECRET}
      - OAUTH2_ISSUER_URL=${OAUTH2_ISSUER_URL}
      - OAUTH2_CONSENT_URL=${OAUTH2_CONSENT_URL}
      - OAUTH2_LOGIN_URL=${OAUTH2_LOGIN_URL}
      - CORS_ENABLED=${CORS_ENABLED}
      - CORS_DEBUG=${CORS_DEBUG}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CORS_ALLOWED_METHODS=${CORS_ALLOWED_METHODS}
      - CORS_ALLOWED_CREDENTIALS=${CORS_ALLOWED_CREDENTIALS}
      - CORS_ALLOWED_HEADERS=${CORS_ALLOWED_HEADERS}
    networks:
      - ory_stack
      - stack
    ports:
      - "9000:4444"
      - "9001:4445"
    entrypoint: hydra
    command: "serve all --dangerous-force-http"



